id,reviewedAt,rating,isMarkedHelpful,reviewText,productCompleted,mostHelpfulVoteCount,users,user_id
106759622~COURSE!~SC_uXrmNEeuzGxLrFW5SVw,1668673414245,3,0,"I have loved the courses in this sequence so far, but this one really frustrated me.  In general, this course is a huge jump up in difficulty from the previous courses.  This manifests itself in several ways that jointly make the course very hard:  (1) a speedup in pacing, (2) videos that provide examples that are much easier than the exercises, (3) exercises that presuppose things that are not explained in the videos, and (4) the autograder gives insufficient feedback in many cases.  The introduction of linked lists happens very quickly, with very little explanation as to why linked lists are important and the advantages of using them.  The early lessons are super easy, but they rapidly progress to doing complicated things with linked lists. In order to do this, you have to be extremely comfortable with pointers on a level that I don't think is reasonable given the short time since they were introduced. By the end of week 3, the lessons involve writing functions to help you write more complicated functions to sort and search through linked lists.  I think sorting and searching algorithms are important, but they are pretty complex and introduce a lot of moving parts when you are just trying to get comfortable with linked lists. Previous courses in the sequence had exercises that focused on one thing at a time, which helped make the progression smoother and allowed us to build confidence.  I think that if you are going to do sorting/searching algorithms, they should get standalone treatment, and not be shoehorned into the linked list unit.  The amount of code on the screen is enormous compared to previous exercises.  In the exercises leading up to the course, I never had to write more than a few lines of code to complete them.  By the end of this course, the exercises were pushing 150 lines of code for me.  That's a huge jump in complexity, and you can really feel the clunky aspects of Codecast when the programs get this large.  There was one exercise that required you to write a function to copy a string from one place to another, with no clear explanation as to why this was needed to complete the exercise.  The lesson before it didn't involve strings, so watching it didn't help.  This is a needless complication.  And then there's the issue of the autograder.  I don't want to be unfair because I know that autograders are annoying in every programming course (other C courses have similar issues), but it is so frustrating to submit code, have the grader reject it, and then get no feedback as to what is wrong.  It is entirely possible to write a program that will compile correctly, produce the correct output, and still have the autograder reject it.  There are forum posts of people posting screenshots of the outputs matching the ""correct"" answers and the autograder shows no output.  This will waste a lot of time and just drive you absolutely insane.   If a few of these issues could be improved and the pacing of the course were spread more evenly, I think it could be so much better.  ",0,1,Richard Creek,106759622
107441481~COURSE!~SC_uXrmNEeuzGxLrFW5SVw,1669583546887,4,0,well done,0,0,VOUFO KEVINE LAURA,107441481
3923550~COURSE!~SC_uXrmNEeuzGxLrFW5SVw,1676339103930,5,0,Pointers are a challenge and this course does a really good job of visualizing dancing through memory.,0,0,Chris Larsen,3923550
43373008~COURSE!~SC_uXrmNEeuzGxLrFW5SVw,1674144930048,5,0,This course helped me understand the basic concept of Linked lists. The graphic representation made during the videos shows how the pointer of the head of the list is very crucial and must not be lost. ,0,0,Joshua Alonge,43373008
91706876~COURSE!~SC_uXrmNEeuzGxLrFW5SVw,1672748288243,5,0," I just finished taking this course and I have to say that it was an excellent learning experience. The instructor was knowledgeable and engaging, and the material covered was comprehensive and in-depth. I feel much more confident in my understanding of advanced data types in C as a result of taking this course, and I would highly recommend it to anyone who is looking to deepen their knowledge of C programming  ",0,0,Bakare Muideen Adeleke,91706876
3295952~COURSE!~SC_uXrmNEeuzGxLrFW5SVw,1658935861362,5,0,Pointers applied. Very well explained.,0,0,Peter,3295952
